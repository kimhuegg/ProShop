[{"C:\\Users\\hue\\Documents\\mock2\\src\\index.js":"1","C:\\Users\\hue\\Documents\\mock2\\src\\serviceWorker.js":"2","C:\\Users\\hue\\Documents\\mock2\\src\\App.js":"3","C:\\Users\\hue\\Documents\\mock2\\src\\features\\ProductDetail\\ProductDetail.jsx":"4","C:\\Users\\hue\\Documents\\mock2\\src\\features\\NavbarUser\\NavbarUser.jsx":"5","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ForgotPasswordForm.jsx":"6","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\LoginForm.jsx":"7","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\RegisterForm.jsx":"8","C:\\Users\\hue\\Documents\\mock2\\src\\api\\productApi.js":"9","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductImage\\ProductImage.jsx":"10","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductReview\\ProductReview.jsx":"11","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductInfo\\ProductInfo.jsx":"12","C:\\Users\\hue\\Documents\\mock2\\src\\components\\RelatedProducts\\RelatedProducts.jsx":"13","C:\\Users\\hue\\Documents\\mock2\\src\\api\\axiosClient.js":"14","C:\\Users\\hue\\Documents\\mock2\\src\\components\\CustomButton\\CustomButton.jsx":"15","C:\\Users\\hue\\Documents\\mock2\\src\\api\\authApi.js":"16","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Navbar\\CustomButton.js":"17","C:\\Users\\hue\\Documents\\mock2\\src\\redux\\reducers\\authSlice.js":"18","C:\\Users\\hue\\Documents\\mock2\\src\\app\\store.js":"19","C:\\Users\\hue\\Documents\\mock2\\src\\features\\VerifyEmail\\VerifyEmail.jsx":"20","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ConfirmEmailForm.jsx":"21"},{"size":754,"mtime":1650876901384,"results":"22","hashOfConfig":"23"},{"size":5151,"mtime":1650706699423,"results":"24","hashOfConfig":"23"},{"size":1868,"mtime":1650884795965,"results":"25","hashOfConfig":"23"},{"size":2030,"mtime":1650729358823,"results":"26","hashOfConfig":"23"},{"size":5171,"mtime":1650794428706,"results":"27","hashOfConfig":"23"},{"size":7112,"mtime":1650885104784,"results":"28","hashOfConfig":"23"},{"size":8708,"mtime":1650878088166,"results":"29","hashOfConfig":"23"},{"size":7180,"mtime":1650893295834,"results":"30","hashOfConfig":"23"},{"size":1038,"mtime":1650729358803,"results":"31","hashOfConfig":"23"},{"size":741,"mtime":1650729358811,"results":"32","hashOfConfig":"23"},{"size":3050,"mtime":1650729358817,"results":"33","hashOfConfig":"23"},{"size":2904,"mtime":1650729358814,"results":"34","hashOfConfig":"23"},{"size":358,"mtime":1650729358819,"results":"35","hashOfConfig":"23"},{"size":638,"mtime":1650729358801,"results":"36","hashOfConfig":"23"},{"size":166,"mtime":1650729358809,"results":"37","hashOfConfig":"23"},{"size":774,"mtime":1650891679576,"results":"38","hashOfConfig":"23"},{"size":1889,"mtime":1650892303516,"results":"39","hashOfConfig":"23"},{"size":573,"mtime":1650876986524,"results":"40","hashOfConfig":"23"},{"size":298,"mtime":1650876911914,"results":"41","hashOfConfig":"23"},{"size":4903,"mtime":1650897501853,"results":"42","hashOfConfig":"23"},{"size":3733,"mtime":1650896491568,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ik4ppl",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"93","messages":"94","errorCount":6,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\hue\\Documents\\mock2\\src\\index.js",[],["95","96"],"C:\\Users\\hue\\Documents\\mock2\\src\\serviceWorker.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\App.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\features\\ProductDetail\\ProductDetail.jsx",["97","98","99","100"],"import { Breadcrumb, Col, Divider, Layout, Menu, Row, Skeleton } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport productApi from \"../../api/productApi\";\r\nimport ProductImage from \"../../components/ProductImage/ProductImage\";\r\nimport ProductInfo from \"../../components/ProductInfo/ProductInfo\";\r\nimport ProductReview from \"../../components/ProductReview/ProductReview\";\r\nimport RelatedProducts from \"../../components/RelatedProducts/RelatedProducts\";\r\nimport \"./style.scss\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst ProductDetail = () => {\r\n  const [data, setData] = useState([]);\r\n  const { id } = useParams();\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    productApi.getById(164).then(({ data }) => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Content className=\"product\" style={{ padding: \"0 144px\" }}> */}\r\n      {/* <Row align=\"center\">\r\n        <Col span={18}> */}\r\n      <Breadcrumb separator=\">\" style={{ margin: \"16px 0\", textAlign: \"left\" }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Category</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Name</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"product-information\">\r\n        <Skeleton loading={!data?.product?.images?.length}>\r\n          <Row>\r\n            <Col span={9}>\r\n              <ProductImage product={data?.product?.images} />\r\n            </Col>\r\n            <Col span={15}>\r\n              <ProductInfo product={data?.product} />\r\n            </Col>\r\n          </Row>\r\n        </Skeleton>\r\n      </div>\r\n      <Divider className=\"product-divider\" />\r\n      <div className=\"product-review\">\r\n        <ProductReview review={data?.review} />\r\n      </div>\r\n      <div className=\"related-products\">\r\n        <RelatedProducts />\r\n      </div>\r\n      {/* </Col>\r\n      </Row> */}\r\n      {/* </Content> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\features\\NavbarUser\\NavbarUser.jsx",["101","102"],"import { MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport { Button, Container, Grid, Modal } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button as BtnAntd, Input } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, Outlet } from \"react-router-dom\";\r\nimport ForgotPasswordForm from \"../../components/Auth/ForgotPasswordForm.jsx\";\r\nimport LoginForm from \"../../components/Auth/LoginForm.jsx\";\r\nimport RegisterForm from \"../../components/Auth/RegisterForm.jsx\";\r\nimport \"./style.scss\";\r\nimport CustomButton from '../../components/Navbar/CustomButton'\r\n\r\nconst styleModal = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 800,\r\n  bgcolor: \"background.paper\",\r\n  borderRadius: \"20px\",\r\n  boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n};\r\n\r\nfunction NavbarUser() {\r\n  const [modal, setModal] = useState({\r\n    login: false,\r\n    register: false,\r\n    forgot: false,\r\n    confirm: false,\r\n  });\r\n  const { login, register, forgot, confirm } = modal;\r\n\r\n  const handleOpenLogin = () => {\r\n    setModal({ login: true, register: false, forgot: false, confirm: false });\r\n  };\r\n\r\n  const handleCloseLogin = () => {\r\n    setModal({ ...modal, login: false });\r\n  };\r\n\r\n  const handleOpenRegister = () => {\r\n    setModal({ login: false, register: true, forgot: false, confirm: false });\r\n  };\r\n\r\n  const handleCloseRegister = () => {\r\n    setModal({ ...modal, register: false });\r\n  };\r\n\r\n  const handleOpenForgotPass = () => {\r\n    setModal({ login: false, register: false, forgot: true, confirm: false });\r\n  };\r\n\r\n  const handleCloseForgotPass = () => {\r\n    setModal({ ...modal, forgot: false });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ backgroundColor: \"#F0E9E9\" }}>\r\n        <Container maxWidth=\"lg\" sx={{ textAlign: \"left\" }}>\r\n          <Link to={\"#\"}>About us </Link>&ensp;&ensp;\r\n          <Link to={\"#\"}>Contacts </Link>&ensp;&ensp;\r\n          <Link to={\"#\"}>Store </Link>&ensp;&ensp;\r\n          <Link to={\"#\"}>Track Orders </Link> &ensp;&ensp;\r\n        </Container>\r\n      </div>\r\n      <div style={{ backgroundColor: \"#FFD333\" }}>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ pt: 2, pb: 2 }}>\r\n            <Grid container alignItems={\"center\"}>\r\n              <Grid item xs={2}>\r\n                <Typography sx={{ fontSize: 36, fontWeight: \"bold\" }}>Shop app</Typography>\r\n              </Grid>\r\n              <Grid item xs={8} container justifyContent={\"start\"}>\r\n                <Input.Group compact>\r\n                  <BtnAntd>\r\n                    <MenuFoldOutlined /> Category\r\n                  </BtnAntd>\r\n                  <Input.Search allowClear style={{ width: \"40%\" }} defaultValue=\"0571\" />\r\n                </Input.Group>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Button sx={{ borderRadius: \"50%\" }}>\r\n                  <ShoppingCartIcon sx={{ fontSize: 38, fontWeight: \"bold\" }} />\r\n                </Button>\r\n                <Typography\r\n                  style={{\r\n                    backgroundColor: \"#FFF\",\r\n                    borderRadius: \"50%\",\r\n                    height: 25,\r\n                    width: 25,\r\n                    position: \"absolute\",\r\n                    marginTop: \"-20px\",\r\n                  }}\r\n                >\r\n                  1\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <CustomButton openLogin={handleOpenLogin}/>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Container>\r\n      </div>\r\n      <Modal\r\n        open={login}\r\n        onClose={handleCloseLogin}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={styleModal}>\r\n          <Box container>\r\n            <LoginForm\r\n              onClose={handleCloseLogin}\r\n              onOpenRegister={handleOpenRegister}\r\n              onOpenForgotPass={handleOpenForgotPass}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Modal\r\n        open={register}\r\n        onClose={handleCloseRegister}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={styleModal}>\r\n          <Box container>\r\n            <RegisterForm onClose={handleCloseRegister} onOpenLogin={handleOpenLogin} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Modal\r\n        open={forgot}\r\n        onClose={handleCloseForgotPass}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={styleModal}>\r\n          <Box container>\r\n            <ForgotPasswordForm onClose={handleCloseForgotPass} onOpenLogin={handleOpenLogin} />\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n      <div className=\"user-content\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarUser;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ForgotPasswordForm.jsx",["103","104"],"import React, {useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\n\r\nimport {Button, Grid, TextField,  Alert,} from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport authApi from \"../../api/authApi\";\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        neutral: {\r\n            main: \"#FFD333\",\r\n            contrastText: \"#000\"\r\n        },\r\n        white: {\r\n            main: \"#FFF\",\r\n            contrastText: \"#000\"\r\n        }\r\n    }\r\n});\r\n\r\nfunction ForgotPasswordForm({onClose, onOpenLogin}) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        onSubmit: values => {\r\n            setLoading(true)\r\n            console.log(values)\r\n            authApi.forgotPassword(values).then((res) => {\r\n                onClose()\r\n            }).catch((error) => {\r\n                setError(error.toString())\r\n            }). finally(() => {\r\n                setLoading(false)\r\n            })\r\n        }\r\n    })\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Card sx={\r\n                {\r\n                    minWidth: 275,\r\n                    maxWidth: 832,\r\n                    borderRadius: \"20px\",\r\n                    boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\"\r\n                }\r\n            }>\r\n                <Grid container>\r\n                    <Grid item\r\n                        xs={6}\r\n                        sx={\r\n                            {p: \"47px\"}\r\n                    }>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"div\">\r\n                                Forgot Password\r\n                            </Typography>\r\n                            <Typography sx={\r\n                                    {fontSize: 12}\r\n                                }\r\n                                color=\"text.secondary\">\r\n                                Please enter your exact email to receive your password !\r\n                            </Typography>\r\n                            {\r\n                            error ? <Alert severity=\"error\">\r\n                                {error}</Alert> : ''\r\n                        } </CardContent>\r\n                        <CardActions>\r\n                            <form onSubmit={\r\n                                formik.handleSubmit\r\n                            }>\r\n\r\n                                <TextField margin=\"normal\" required fullWidth id=\"email\" label=\"email\" type=\"email\" autoComplete=\"code\" variant=\"standard\"\r\n                                    onChange={\r\n                                        formik.handleChange\r\n                                    }/> \r\n                                    {\r\n                                loading ? <CircularProgress/>: <Button type=\"submit\" fullWidth variant=\"contained\"\r\n                                    sx={\r\n                                        {\r\n                                            mb: 2,\r\n                                            mt: 2,\r\n                                            fontSize: \"24\",\r\n                                            fontWeight: \"bold\"\r\n                                        }\r\n                                    }\r\n                                    color=\"neutral\">\r\n                                    Recover password\r\n                                </Button>\r\n                            }\r\n                                <Grid container>\r\n                                    <Grid item\r\n                                        xs={12}\r\n                                        sx={\r\n                                            {pb: 5}\r\n                                    }>\r\n                                        <span variant=\"body2\"\r\n                                            onClick={onOpenLogin}>\r\n                                            {\"Login \"} </span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </CardActions>\r\n                    </Grid>\r\n                    <Grid item\r\n                        xs={6}\r\n                        sx={\r\n                            {bgcolor: \"#FAF096\"}\r\n                        }\r\n                        container\r\n                        alignItems={\"start\"}>\r\n                        <Grid sx={\r\n                                {height: \"30px\"}\r\n                            }\r\n                            container\r\n                            justifyContent=\"end\">\r\n                            <Button onClick={onClose}\r\n                                variant=\"contained\"\r\n                                color=\"white\"\r\n                                sx={\r\n                                    {\r\n                                        boxSizing: \"border-box\",\r\n                                        p: 0,\r\n                                        borderRadius: \"50%\",\r\n                                        m: 1,\r\n                                        height: \"60px\",\r\n                                        width: \"30px\",\r\n                                        boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\"\r\n                                    }\r\n                            }>\r\n                                x\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\"\r\n                            alignItems={\"center\"}>\r\n                            <div>\r\n                                <Typography variant=\"h5\" component=\"div\"\r\n                                    sx={\r\n                                        {\r\n                                            fontSize: 68,\r\n                                            fontWeight: \"bold\"\r\n                                        }\r\n                                }>\r\n                                    SHOP APP\r\n                                </Typography>\r\n                                <img style={\r\n                                        {\r\n                                            marginLeft: \"auto\",\r\n                                            marginRight: \"auto\",\r\n                                            display: \"block\"\r\n                                        }\r\n                                    }\r\n                                    src={\r\n                                        require(\"../../media/Vector.png\")\r\n                                    }/>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\LoginForm.jsx",["105","106"],"import {\r\n    Alert,\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Grid,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport {createTheme, ThemeProvider} from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {useFormik} from \"formik\";\r\nimport React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authApi from \"../../api/authApi\";\r\n\r\nimport {login} from '../../redux/reducers/authSlice'\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        neutral: {\r\n            main: \"#FFD333\",\r\n            contrastText: \"#000\"\r\n        },\r\n        white: {\r\n            main: \"#FFF\",\r\n            contrastText: \"#000\"\r\n        }\r\n    }\r\n});\r\n\r\nfunction LoginForm({onClose, onOpenRegister, onOpenForgotPass}) {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        onSubmit: values => {\r\n            setLoading(true)\r\n            const userLogin = {\r\n                email: values.email,\r\n                password: values.password,\r\n                deviceId: values.email\r\n            }\r\n            authApi.login(userLogin).then((res) => {\r\n                const token = res.data.tokens.access.token\r\n                const userInfo = res.data.user\r\n                localStorage.setItem(\"token\", token)\r\n                localStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n                dispatch(login(userInfo))\r\n                onClose()\r\n            }).catch((error) => {\r\n                setError(error.toString())\r\n            }). finally(() => {\r\n                setLoading(false)\r\n            })\r\n        }\r\n    });\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Card sx={\r\n                {\r\n                    minWidth: 300,\r\n                    maxWidth: 832,\r\n                    borderRadius: \"20px\",\r\n                    boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\"\r\n                }\r\n            }>\r\n                <Grid container>\r\n                    <Grid item\r\n                        xs={6}\r\n                        sx={\r\n                            {p: \"47px\"}\r\n                    }>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"div\">\r\n                                Wellcome to Shop App\r\n                            </Typography>\r\n                            {\r\n                            error ? <Alert severity=\"error\">\r\n                                {error}</Alert> : ''\r\n                        } \r\n                        </CardContent>\r\n\r\n\r\n                        <CardActions>\r\n                            <form onSubmit={\r\n                                formik.handleSubmit\r\n                            }>\r\n                                <TextField margin=\"normal\" required fullWidth id=\"email\" label=\"Email\" type=\"text\" autoComplete=\"username\" variant=\"standard\"\r\n                                    onChange={\r\n                                        formik.handleChange\r\n                                    }/>\r\n                                <TextField margin=\"normal\" required fullWidth id=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\" variant=\"standard\"\r\n                                    onChange={\r\n                                        formik.handleChange\r\n                                    }/>\r\n\r\n                                <Grid container justifyContent=\"end\">\r\n                                    <Grid item>\r\n                                        <span variant=\"body2\"\r\n                                            onClick={onOpenForgotPass}>\r\n                                            {\"Forgot ? \"} </span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container justifyContent=\"start\">\r\n                                    <FormControlLabel control={\r\n                                            <Checkbox\r\n                                        value=\"remember\"\r\n                                        color=\"primary\"/>\r\n                                        }\r\n                                        label=\"Remember me\"/>\r\n                                </Grid>\r\n\r\n                                {\r\n                                loading ? <CircularProgress/>: <Button type=\"submit\" fullWidth variant=\"contained\"\r\n                                    sx={\r\n                                        {\r\n                                            mb: 2,\r\n                                            fontSize: \"24\",\r\n                                            fontWeight: \"bold\"\r\n                                        }\r\n                                    }\r\n                                    color=\"neutral\">\r\n                                    Log In\r\n                                </Button>\r\n                            }\r\n                                <Grid container>\r\n                                    <Grid item\r\n                                        xs={12}\r\n                                        sx={\r\n                                            {\r\n                                                pb: 5,\r\n                                                cursor: 'pointer'\r\n                                            }\r\n                                    }>\r\n                                        <span variant=\"body2\"\r\n                                            onClick={onOpenRegister}>\r\n                                            {\"Create an account \"} </span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </CardActions>\r\n                    </Grid>\r\n                    <Grid item\r\n                        xs={6}\r\n                        sx={\r\n                            {bgcolor: \"#FAF096\"}\r\n                        }\r\n                        container\r\n                        alignItems={\"start\"}>\r\n                        <Grid sx={\r\n                                {height: \"30px\"}\r\n                            }\r\n                            container\r\n                            justifyContent=\"end\">\r\n                            <Button onClick={onClose}\r\n                                variant=\"contained\"\r\n                                color=\"white\"\r\n                                sx={\r\n                                    {\r\n                                        borderRadius: \"50%\",\r\n                                        m: 1,\r\n                                        p: 0,\r\n                                        height: \"60px\",\r\n                                        width: \"30px\",\r\n                                        boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\"\r\n                                    }\r\n                            }>\r\n                                x\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\"\r\n                            alignItems={\"center\"}>\r\n                            <div>\r\n                                <Typography variant=\"h5\" component=\"div\"\r\n                                    sx={\r\n                                        {\r\n                                            fontSize: 68,\r\n                                            fontWeight: \"bold\"\r\n                                        }\r\n                                }>\r\n                                    SHOP APP\r\n                                </Typography>\r\n\r\n                                <img style={\r\n                                        {\r\n                                            marginLeft: \"auto\",\r\n                                            marginRight: \"auto\",\r\n                                            display: \"block\"\r\n                                        }\r\n                                    }\r\n                                    src={\r\n                                        require(\"../../media/Vector.png\")\r\n                                    }/>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\RegisterForm.jsx",["107","108"],"import React, {useState} from \"react\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  TextField,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {useFormik} from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {register} from '../../redux/reducers/authSlice'\r\nimport authApi from \"../../api/authApi\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    neutral: {\r\n      main: \"#FFD333\",\r\n      contrastText: \"#000\",\r\n    },\r\n    white: {\r\n      main: \"#FFF\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction RegisterForm({ onClose, onOpenLogin }) {\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        username : '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    },\r\n    onSubmit: values => {\r\n        setLoading(true)\r\n        const userRegister = {\r\n            email: values.email,\r\n            password: values.password,\r\n            username : values.username\r\n        }\r\n        console.log(userRegister)\r\n        authApi.register(userRegister).then((res) => {\r\n           dispatch(register(res.data.user))\r\n            onClose()\r\n        }).catch((error) => {\r\n            setError(error.toString())\r\n        }). finally(() => {\r\n            setLoading(false)\r\n        })\r\n        // send verify email\r\n    }\r\n});\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Card\r\n        sx={{\r\n          minWidth: 275,\r\n          maxWidth: 832,\r\n          borderRadius: \"20px\",\r\n          boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sx={{ bgcolor: \"#FAF096\" }}\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems={\"center\"}\r\n          >\r\n            <Grid container justifyContent=\"center\" alignItems={\"center\"}>\r\n              <div>\r\n                <Typography variant=\"h5\" component=\"div\" sx={{ fontSize: 68, fontWeight: \"bold\" }}>\r\n                  SHOP APP\r\n                </Typography>\r\n                <img\r\n                  style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"block\" }}\r\n                  src={require(\"../../media/Vector.png\")}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} sx={{ p: \"47px\" }} container>\r\n            <Grid sx={{ height: \"30px\" }} container justifyContent=\"end\">\r\n              <Button\r\n                onClick={onClose}\r\n                variant=\"contained\"\r\n                color=\"white\"\r\n                sx={{\r\n                  m: \"-20px\",\r\n                  borderRadius: \"50%\",\r\n                  height: \"60px\",\r\n                  width: \"30px\",\r\n                  boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n                }}\r\n              >\r\n                x\r\n              </Button>\r\n            </Grid>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                Wellcome to Shop App\r\n              </Typography>\r\n              {\r\n                            error ? <Alert severity=\"error\">\r\n                                {error}</Alert> : ''\r\n                        } \r\n            </CardContent>\r\n            <CardActions>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  autoComplete=\"username\"\r\n                  variant=\"standard\"\r\n                  onChange={\r\n                    formik.handleChange\r\n                }\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"username\"\r\n                  variant=\"standard\"\r\n                  onChange={\r\n                    formik.handleChange\r\n                }\r\n                />\r\n\r\n                <FormControl variant=\"standard\" fullWidth margin=\"dense\">\r\n                  <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                        >\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    onChange={\r\n                      formik.handleChange\r\n                  }\r\n                  />\r\n                </FormControl>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"standard\"\r\n                  onChange={formik.handleChange }\r\n                />\r\n\r\n{\r\n                loading ? <CircularProgress/>: <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mb: 2, mt: 2, fontSize: \"24\", fontWeight: \"bold\" }}\r\n                  color=\"neutral\"\r\n                >\r\n                  Register\r\n                </Button>\r\n                }\r\n                <Grid container>\r\n                  <Grid item xs={12} sx={{ pb: 5 }}>\r\n                    <span variant=\"body2\" onClick={onOpenLogin}>\r\n                      {\"Login\"}\r\n                    </span>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardActions>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n/**\r\n  * \"@emotion/react\": \"^11.9.0\",\r\n    \"@emotion/styled\": \"^11.8.1\",\r\n    \"@mui/icons-material\": \"^5.6.2\",\r\n    \"@mui/material\": \"^5.6.2\",\r\n  */\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\api\\productApi.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductImage\\ProductImage.jsx",["109"],"import { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport \"./style.scss\";\r\n\r\nfunction ProductImage({ product }) {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      let newImages = [];\r\n      console.log(\"chay de\");\r\n      product.map((item) => {\r\n        newImages.push({\r\n          original: item.url,\r\n          thumbnail: item.url,\r\n        });\r\n      });\r\n      setImages(newImages);\r\n    }\r\n  }, [product]);\r\n\r\n  return (\r\n    <div>\r\n      <ImageGallery items={images} infinite showPlayButton={false} useBrowserFullscreen={false} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImage;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductReview\\ProductReview.jsx",["110","111"],"import { Divider, Pagination, Avatar, Rate, Input, Button } from \"antd\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport \"./style.scss\";\r\n\r\nconst datas = [\r\n  {\r\n    avatar: 123,\r\n    name: \"Samatha Smith\",\r\n    rate: 5,\r\n    comment:\r\n      \"Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ultrices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n  {\r\n    avatar: 456,\r\n    name: \"Samatha Smith\",\r\n    rate: 4,\r\n    comment:\r\n      \"Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul  Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ultrices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n  {\r\n    avatar: \"yolo3\",\r\n    name: \"Samatha Smith\",\r\n    rate: 0,\r\n    comment: \"trices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n];\r\n\r\nconst ProductReview = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"reviews\">\r\n        <h1 className=\"reviews-title\">Customer Reviews</h1>\r\n        <ul className=\"reviews-list\">\r\n          {datas.map((data) => (\r\n            <li className=\"customer-review__item\">\r\n              <div className=\"customer-review-container\">\r\n                <div className=\"customer-review__avatar\">\r\n                  <span className=\"customer-review__avatar-data\">{data.avatar}</span>\r\n                </div>\r\n                <div className=\"customer-review__content\">\r\n                  <div className=\"customer-review__name\">{data.name}</div>\r\n                  <Rate className=\"customer-review__rating\" disabled defaultValue={data.rate} />\r\n                  <div className=\"customer-review__comment\">{data.comment}</div>\r\n                  <div className=\"customer-review__date\">{data.date}</div>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"customer-review__divider\" />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Pagination className=\"reviews-pagination\" />\r\n      </div>\r\n      <div className=\"write-review\">\r\n        <h1 className=\"write-review__title reviews-title\">Write Review</h1>\r\n        <Rate className=\"write-review__rating\" />\r\n        <input className=\"write-review__content\" placeholder=\"Write Your Review...\" />\r\n        <Button type=\"primary\">Post Your Review</Button>\r\n        <CustomButton>test button</CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductReview;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductInfo\\ProductInfo.jsx",["112","113"],"import { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Descriptions, Divider, Input, Rate, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport cartLogo from \"../../media/Union.png\";\r\nimport \"./style.scss\";\r\n\r\nfunction ProductInfo({ product }) {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rate, setRate] = useState(null);\r\n\r\n  const addToCarthandler = () => {\r\n    console.log(\"add to cart\");\r\n  };\r\n\r\n  const handleIncrease = () => {\r\n    if (quantity < product.countInStock) {\r\n      setQuantity((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handleDecrease = () => {\r\n    if (quantity > 1) {\r\n      setQuantity((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleRate = (e) => {\r\n    setRate(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-info\">\r\n      <Typography.Title className=\"product-info__name\" level={1}>\r\n        {product.name}\r\n      </Typography.Title>\r\n\r\n      <div className=\"rating\">\r\n        <Rate className=\"rating-item\" disabled defaultValue={product.rating} />\r\n        <div className=\"rating-item ant-rate-text\">{product.numOfReviews} Reviews</div>\r\n      </div>\r\n\r\n      <div className=\"product-info__description\">{product.description}</div>\r\n      <Divider />\r\n      <Descriptions row={3}>\r\n        <Descriptions.Item label=\"In Stock\"> {product.countInStock}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Brand\">{product.brand}</Descriptions.Item>\r\n      </Descriptions>\r\n      <Typography.Title className=\"product-info__price\" level={1}>\r\n        ${product.price}\r\n      </Typography.Title>\r\n\r\n      <div className=\"product-quantity__text\">Quantity</div>\r\n      <div className=\"product-btn-container\">\r\n        <div className=\"product-btn\">\r\n          <Button\r\n            className=\"product-quantity__btn\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            icon={<MinusOutlined />}\r\n            onClick={handleDecrease}\r\n          />\r\n          <Input\r\n            className=\"product-quantity__input\"\r\n            style={{ width: \"60px\" }}\r\n            bordered={false}\r\n            type=\"number\"\r\n            onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\r\n            value={quantity > product.countInStock ? product.countInStock : quantity}\r\n          />\r\n          <Button\r\n            className=\"product-quantity__btn\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={handleIncrease}\r\n            icon={<PlusOutlined />}\r\n          />\r\n        </div>\r\n        <Button className=\"product-add__btn\" size=\"large\" type=\"primary\" onClick={addToCarthandler}>\r\n          <img src={cartLogo} />\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n      <div className=\"product-rate\">\r\n        <div className=\"product-rate__text\">Rate</div>\r\n        <Rate onChange={handleRate} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInfo;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\RelatedProducts\\RelatedProducts.jsx",[],"C:\\Users\\hue\\Documents\\mock2\\src\\api\\axiosClient.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\CustomButton\\CustomButton.jsx",[],"C:\\Users\\hue\\Documents\\mock2\\src\\api\\authApi.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\Navbar\\CustomButton.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\redux\\reducers\\authSlice.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\app\\store.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\features\\VerifyEmail\\VerifyEmail.jsx",["114","115","116"],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ConfirmEmailForm.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":44,"nodeType":"143","messageId":"144","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"145","line":11,"column":9,"nodeType":"143","messageId":"144","endLine":11,"endColumn":15},{"ruleId":"141","severity":1,"message":"146","line":11,"column":17,"nodeType":"143","messageId":"144","endLine":11,"endColumn":24},{"ruleId":"141","severity":1,"message":"147","line":15,"column":11,"nodeType":"143","messageId":"144","endLine":15,"endColumn":13},{"ruleId":"141","severity":1,"message":"148","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},{"ruleId":"141","severity":1,"message":"149","line":35,"column":36,"nodeType":"143","messageId":"144","endLine":35,"endColumn":43},{"ruleId":"150","severity":1,"message":"151","line":36,"column":13,"nodeType":"152","messageId":"153","endLine":40,"endColumn":24,"fix":"154"},{"ruleId":"155","severity":1,"message":"156","line":153,"column":33,"nodeType":"157","endLine":162,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":52,"column":13,"nodeType":"152","messageId":"153","endLine":61,"endColumn":24,"fix":"158"},{"ruleId":"155","severity":1,"message":"156","line":193,"column":33,"nodeType":"157","endLine":202,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":67,"column":9,"nodeType":"152","messageId":"153","endLine":72,"endColumn":20,"fix":"159"},{"ruleId":"155","severity":1,"message":"156","line":102,"column":17,"nodeType":"157","endLine":105,"endColumn":19},{"ruleId":"160","severity":1,"message":"161","line":13,"column":26,"nodeType":"162","messageId":"163","endLine":13,"endColumn":28},{"ruleId":"141","severity":1,"message":"164","line":1,"column":31,"nodeType":"143","messageId":"144","endLine":1,"endColumn":37},{"ruleId":"141","severity":1,"message":"165","line":1,"column":45,"nodeType":"143","messageId":"144","endLine":1,"endColumn":50},{"ruleId":"141","severity":1,"message":"166","line":9,"column":10,"nodeType":"143","messageId":"144","endLine":9,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":79,"column":11,"nodeType":"157","endLine":79,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":38,"column":13,"nodeType":"152","messageId":"153","endLine":50,"endColumn":24,"fix":"167"},{"ruleId":"168","severity":1,"message":"169","line":55,"column":8,"nodeType":"170","endLine":55,"endColumn":10,"suggestions":"171"},{"ruleId":"150","severity":1,"message":"151","line":64,"column":13,"nodeType":"152","messageId":"153","endLine":71,"endColumn":24,"fix":"172"},{"ruleId":"141","severity":1,"message":"173","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":12},{"ruleId":"141","severity":1,"message":"174","line":8,"column":5,"nodeType":"143","messageId":"144","endLine":8,"endColumn":10},{"ruleId":"141","severity":1,"message":"175","line":11,"column":5,"nodeType":"143","messageId":"144","endLine":11,"endColumn":21},{"ruleId":"141","severity":1,"message":"176","line":12,"column":5,"nodeType":"143","messageId":"144","endLine":12,"endColumn":13},{"ruleId":"141","severity":1,"message":"177","line":13,"column":5,"nodeType":"143","messageId":"144","endLine":13,"endColumn":8},{"ruleId":"141","severity":1,"message":"178","line":15,"column":5,"nodeType":"143","messageId":"144","endLine":15,"endColumn":19},{"ruleId":"141","severity":1,"message":"179","line":16,"column":5,"nodeType":"143","messageId":"144","endLine":16,"endColumn":14},{"ruleId":"141","severity":1,"message":"180","line":17,"column":5,"nodeType":"143","messageId":"144","endLine":17,"endColumn":16},{"ruleId":"141","severity":1,"message":"181","line":18,"column":5,"nodeType":"143","messageId":"144","endLine":18,"endColumn":15},{"ruleId":"141","severity":1,"message":"165","line":19,"column":5,"nodeType":"143","messageId":"144","endLine":19,"endColumn":10},{"ruleId":"141","severity":1,"message":"182","line":21,"column":9,"nodeType":"143","messageId":"144","endLine":21,"endColumn":20},{"ruleId":"141","severity":1,"message":"183","line":21,"column":22,"nodeType":"143","messageId":"144","endLine":21,"endColumn":26},{"ruleId":"184","severity":2,"message":"185","line":40,"column":33,"nodeType":"143","messageId":"186","endLine":40,"endColumn":41},{"ruleId":"141","severity":1,"message":"187","line":41,"column":10,"nodeType":"143","messageId":"144","endLine":41,"endColumn":15},{"ruleId":"184","severity":2,"message":"185","line":41,"column":29,"nodeType":"143","messageId":"186","endLine":41,"endColumn":37},{"ruleId":"184","severity":2,"message":"188","line":42,"column":18,"nodeType":"143","messageId":"186","endLine":42,"endColumn":27},{"ruleId":"150","severity":1,"message":"151","line":49,"column":9,"nodeType":"152","messageId":"153","endLine":56,"endColumn":20,"fix":"189"},{"ruleId":"184","severity":2,"message":"190","line":49,"column":9,"nodeType":"143","messageId":"186","endLine":49,"endColumn":16},{"ruleId":"184","severity":2,"message":"191","line":50,"column":23,"nodeType":"143","messageId":"186","endLine":50,"endColumn":31},{"ruleId":"184","severity":2,"message":"192","line":53,"column":13,"nodeType":"143","messageId":"186","endLine":53,"endColumn":24},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'id' is assigned a value but never used.","'PersonIcon' is defined but never used.","'confirm' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property finally.","MemberExpression","unexpectedWhitespace",{"range":"195","text":"196"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"197","text":"196"},{"range":"198","text":"196"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Avatar' is defined but never used.","'Input' is defined but never used.","'rate' is assigned a value but never used.",{"range":"199","text":"196"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo.email' and 'userInfo.isEmailVerified'. Either include them or remove the dependency array.","ArrayExpression",["200"],{"range":"201","text":"196"},"'Card' is defined but never used.","'Alert' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'InputAdornment' is defined but never used.","'CardMedia' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'useNavigate' is defined but never used.","'Link' is defined but never used.","no-undef","'useState' is not defined.","undef","'error' is assigned a value but never used.","'useFormik' is not defined.",{"range":"202","text":"196"},"'authApi' is not defined.","'userInfo' is not defined.","'setVerified' is not defined.","no-global-assign","no-unsafe-negation",[1278,1280],".",[1924,1926],[2015,2017],[1664,1666],{"desc":"203","fix":"204"},[2234,2236],[1416,1418],"Update the dependencies array to be: [userInfo.email, userInfo.isEmailVerified]",{"range":"205","text":"206"},[1754,1756],"[userInfo.email, userInfo.isEmailVerified]"]