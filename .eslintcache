[{"C:\\Users\\hue\\Documents\\mock2\\src\\index.js":"1","C:\\Users\\hue\\Documents\\mock2\\src\\serviceWorker.js":"2","C:\\Users\\hue\\Documents\\mock2\\src\\App.js":"3","C:\\Users\\hue\\Documents\\mock2\\src\\features\\ProductDetail\\ProductDetail.jsx":"4","C:\\Users\\hue\\Documents\\mock2\\src\\features\\NavbarUser\\NavbarUser.jsx":"5","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ForgotPasswordForm.jsx":"6","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\LoginForm.jsx":"7","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\RegisterForm.jsx":"8","C:\\Users\\hue\\Documents\\mock2\\src\\api\\productApi.js":"9","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductImage\\ProductImage.jsx":"10","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductReview\\ProductReview.jsx":"11","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductInfo\\ProductInfo.jsx":"12","C:\\Users\\hue\\Documents\\mock2\\src\\components\\RelatedProducts\\RelatedProducts.jsx":"13","C:\\Users\\hue\\Documents\\mock2\\src\\api\\axiosClient.js":"14","C:\\Users\\hue\\Documents\\mock2\\src\\components\\CustomButton\\CustomButton.jsx":"15","C:\\Users\\hue\\Documents\\mock2\\src\\api\\authApi.js":"16","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Navbar\\CustomButton.js":"17"},{"size":627,"mtime":1650706699421,"results":"18","hashOfConfig":"19"},{"size":5151,"mtime":1650706699423,"results":"20","hashOfConfig":"19"},{"size":1740,"mtime":1650729358800,"results":"21","hashOfConfig":"19"},{"size":2030,"mtime":1650729358823,"results":"22","hashOfConfig":"19"},{"size":5171,"mtime":1650794428706,"results":"23","hashOfConfig":"19"},{"size":4180,"mtime":1650729358806,"results":"24","hashOfConfig":"19"},{"size":5567,"mtime":1650795400783,"results":"25","hashOfConfig":"19"},{"size":5586,"mtime":1650729358808,"results":"26","hashOfConfig":"19"},{"size":1038,"mtime":1650729358803,"results":"27","hashOfConfig":"19"},{"size":741,"mtime":1650729358811,"results":"28","hashOfConfig":"19"},{"size":3050,"mtime":1650729358817,"results":"29","hashOfConfig":"19"},{"size":2904,"mtime":1650729358814,"results":"30","hashOfConfig":"19"},{"size":358,"mtime":1650729358819,"results":"31","hashOfConfig":"19"},{"size":638,"mtime":1650729358801,"results":"32","hashOfConfig":"19"},{"size":166,"mtime":1650729358809,"results":"33","hashOfConfig":"19"},{"size":210,"mtime":1650774046276,"results":"34","hashOfConfig":"19"},{"size":1398,"mtime":1650793436512,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ik4ppl",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hue\\Documents\\mock2\\src\\index.js",[],["77","78"],"C:\\Users\\hue\\Documents\\mock2\\src\\serviceWorker.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\App.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\features\\ProductDetail\\ProductDetail.jsx",["79","80","81","82"],"import { Breadcrumb, Col, Divider, Layout, Menu, Row, Skeleton } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport productApi from \"../../api/productApi\";\r\nimport ProductImage from \"../../components/ProductImage/ProductImage\";\r\nimport ProductInfo from \"../../components/ProductInfo/ProductInfo\";\r\nimport ProductReview from \"../../components/ProductReview/ProductReview\";\r\nimport RelatedProducts from \"../../components/RelatedProducts/RelatedProducts\";\r\nimport \"./style.scss\";\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nconst ProductDetail = () => {\r\n  const [data, setData] = useState([]);\r\n  const { id } = useParams();\r\n  console.log(data);\r\n\r\n  useEffect(() => {\r\n    productApi.getById(164).then(({ data }) => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Content className=\"product\" style={{ padding: \"0 144px\" }}> */}\r\n      {/* <Row align=\"center\">\r\n        <Col span={18}> */}\r\n      <Breadcrumb separator=\">\" style={{ margin: \"16px 0\", textAlign: \"left\" }}>\r\n        <Breadcrumb.Item>\r\n          <Link to=\"/\">Home</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item>Category</Breadcrumb.Item>\r\n        <Breadcrumb.Item>Name</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"product-information\">\r\n        <Skeleton loading={!data?.product?.images?.length}>\r\n          <Row>\r\n            <Col span={9}>\r\n              <ProductImage product={data?.product?.images} />\r\n            </Col>\r\n            <Col span={15}>\r\n              <ProductInfo product={data?.product} />\r\n            </Col>\r\n          </Row>\r\n        </Skeleton>\r\n      </div>\r\n      <Divider className=\"product-divider\" />\r\n      <div className=\"product-review\">\r\n        <ProductReview review={data?.review} />\r\n      </div>\r\n      <div className=\"related-products\">\r\n        <RelatedProducts />\r\n      </div>\r\n      {/* </Col>\r\n      </Row> */}\r\n      {/* </Content> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetail;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\features\\NavbarUser\\NavbarUser.jsx",["83","84"],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\ForgotPasswordForm.jsx",["85"],"import {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    neutral: {\r\n      main: \"#FFD333\",\r\n      contrastText: \"#000\",\r\n    },\r\n    white: {\r\n      main: \"#FFF\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction ForgotPasswordForm({ onClose, onOpenLogin }) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Card\r\n        sx={{\r\n          minWidth: 275,\r\n          maxWidth: 832,\r\n          borderRadius: \"20px\",\r\n          boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item xs={6} sx={{ p: \"47px\" }}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                Forgot Password\r\n              </Typography>\r\n              <Typography sx={{ fontSize: 12 }} color=\"text.secondary\">\r\n                Please enter your email to receice your password !\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <form>\r\n                <FormControl variant=\"standard\" fullWidth margin=\"normal\" required>\r\n                  <InputLabel htmlFor=\"standard-adornment-password\">Email</InputLabel>\r\n                  <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type=\"email\"\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <Button>send code</Button>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"code\"\r\n                  label=\"code\"\r\n                  type=\"text\"\r\n                  autoComplete=\"code\"\r\n                  variant=\"standard\"\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 4, mb: 2, fontSize: \"24\", fontWeight: \"bold\" }}\r\n                  color=\"neutral\"\r\n                >\r\n                  Recover Password\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs={12} sx={{ pb: 5 }}>\r\n                    <span variant=\"body2\" onClick={onOpenLogin}>\r\n                      {\"Login \"}\r\n                    </span>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardActions>\r\n          </Grid>\r\n          <Grid item xs={6} sx={{ bgcolor: \"#FAF096\" }} container alignItems={\"start\"}>\r\n            <Grid sx={{ height: \"30px\" }} container justifyContent=\"end\">\r\n              <Button\r\n                onClick={onClose}\r\n                variant=\"contained\"\r\n                color=\"white\"\r\n                sx={{\r\n                  boxSizing: \"border-box\",\r\n                  p: 0,\r\n                  borderRadius: \"50%\",\r\n                  m: 1,\r\n                  height: \"60px\",\r\n                  width: \"30px\",\r\n                  boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n                }}\r\n              >\r\n                x\r\n              </Button>\r\n            </Grid>\r\n            <Grid container justifyContent=\"center\" alignItems={\"center\"}>\r\n              <div>\r\n                <Typography variant=\"h5\" component=\"div\" sx={{ fontSize: 68, fontWeight: \"bold\" }}>\r\n                  SHOP APP\r\n                </Typography>\r\n                <img\r\n                  style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"block\" }}\r\n                  src={require(\"../../media/Vector.png\")}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\LoginForm.jsx",["86"],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\Auth\\RegisterForm.jsx",["87"],"import Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    neutral: {\r\n      main: \"#FFD333\",\r\n      contrastText: \"#000\",\r\n    },\r\n    white: {\r\n      main: \"#FFF\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction RegisterForm({ onClose, onOpenLogin }) {\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Card\r\n        sx={{\r\n          minWidth: 275,\r\n          maxWidth: 832,\r\n          borderRadius: \"20px\",\r\n          boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            sx={{ bgcolor: \"#FAF096\" }}\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems={\"center\"}\r\n          >\r\n            <Grid container justifyContent=\"center\" alignItems={\"center\"}>\r\n              <div>\r\n                <Typography variant=\"h5\" component=\"div\" sx={{ fontSize: 68, fontWeight: \"bold\" }}>\r\n                  SHOP APP\r\n                </Typography>\r\n                <img\r\n                  style={{ marginLeft: \"auto\", marginRight: \"auto\", display: \"block\" }}\r\n                  src={require(\"../../media/Vector.png\")}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} sx={{ p: \"47px\" }} container>\r\n            <Grid sx={{ height: \"30px\" }} container justifyContent=\"end\">\r\n              <Button\r\n                onClick={onClose}\r\n                variant=\"contained\"\r\n                color=\"white\"\r\n                sx={{\r\n                  m: \"-20px\",\r\n                  borderRadius: \"50%\",\r\n                  height: \"60px\",\r\n                  width: \"30px\",\r\n                  boxShadow: \"5px 5px 10px rgba(0, 0, 0, 0.25)\",\r\n                }}\r\n              >\r\n                x\r\n              </Button>\r\n            </Grid>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                Wellcome to Shop App\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <form>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  autoComplete=\"username\"\r\n                  variant=\"standard\"\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"username\"\r\n                  variant=\"standard\"\r\n                />\r\n\r\n                <FormControl variant=\"standard\" fullWidth margin=\"dense\">\r\n                  <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                  <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          // onMouseDown={handleMouseDownPassword}\r\n                        >\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"confirm-password\"\r\n                  label=\"Confirm Password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  variant=\"standard\"\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mb: 2, mt: 2, fontSize: \"24\", fontWeight: \"bold\" }}\r\n                  color=\"neutral\"\r\n                >\r\n                  Register\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs={12} sx={{ pb: 5 }}>\r\n                    <span variant=\"body2\" onClick={onOpenLogin}>\r\n                      {\"Login\"}\r\n                    </span>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardActions>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n/**\r\n  * \"@emotion/react\": \"^11.9.0\",\r\n    \"@emotion/styled\": \"^11.8.1\",\r\n    \"@mui/icons-material\": \"^5.6.2\",\r\n    \"@mui/material\": \"^5.6.2\",\r\n  */\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\api\\productApi.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductImage\\ProductImage.jsx",["88"],"import { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport \"./style.scss\";\r\n\r\nfunction ProductImage({ product }) {\r\n  const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (product) {\r\n      let newImages = [];\r\n      console.log(\"chay de\");\r\n      product.map((item) => {\r\n        newImages.push({\r\n          original: item.url,\r\n          thumbnail: item.url,\r\n        });\r\n      });\r\n      setImages(newImages);\r\n    }\r\n  }, [product]);\r\n\r\n  return (\r\n    <div>\r\n      <ImageGallery items={images} infinite showPlayButton={false} useBrowserFullscreen={false} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImage;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductReview\\ProductReview.jsx",["89","90"],"import { Divider, Pagination, Avatar, Rate, Input, Button } from \"antd\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport \"./style.scss\";\r\n\r\nconst datas = [\r\n  {\r\n    avatar: 123,\r\n    name: \"Samatha Smith\",\r\n    rate: 5,\r\n    comment:\r\n      \"Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ultrices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n  {\r\n    avatar: 456,\r\n    name: \"Samatha Smith\",\r\n    rate: 4,\r\n    comment:\r\n      \"Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul  Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ul Phasellus id mattis nulla. Mauris velit nisi, imperdiet vitae sodales in, maximus ut lectus. Vivamus commodo scelerisque lacus, at porttitor dui iaculis id. Curabitur imperdiet ultrices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n  {\r\n    avatar: \"yolo3\",\r\n    name: \"Samatha Smith\",\r\n    rate: 0,\r\n    comment: \"trices fermentum.\",\r\n    date: \"27 May, 2018\",\r\n  },\r\n];\r\n\r\nconst ProductReview = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"reviews\">\r\n        <h1 className=\"reviews-title\">Customer Reviews</h1>\r\n        <ul className=\"reviews-list\">\r\n          {datas.map((data) => (\r\n            <li className=\"customer-review__item\">\r\n              <div className=\"customer-review-container\">\r\n                <div className=\"customer-review__avatar\">\r\n                  <span className=\"customer-review__avatar-data\">{data.avatar}</span>\r\n                </div>\r\n                <div className=\"customer-review__content\">\r\n                  <div className=\"customer-review__name\">{data.name}</div>\r\n                  <Rate className=\"customer-review__rating\" disabled defaultValue={data.rate} />\r\n                  <div className=\"customer-review__comment\">{data.comment}</div>\r\n                  <div className=\"customer-review__date\">{data.date}</div>\r\n                </div>\r\n              </div>\r\n              <Divider className=\"customer-review__divider\" />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Pagination className=\"reviews-pagination\" />\r\n      </div>\r\n      <div className=\"write-review\">\r\n        <h1 className=\"write-review__title reviews-title\">Write Review</h1>\r\n        <Rate className=\"write-review__rating\" />\r\n        <input className=\"write-review__content\" placeholder=\"Write Your Review...\" />\r\n        <Button type=\"primary\">Post Your Review</Button>\r\n        <CustomButton>test button</CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductReview;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\ProductInfo\\ProductInfo.jsx",["91","92"],"import { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Descriptions, Divider, Input, Rate, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport cartLogo from \"../../media/Union.png\";\r\nimport \"./style.scss\";\r\n\r\nfunction ProductInfo({ product }) {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rate, setRate] = useState(null);\r\n\r\n  const addToCarthandler = () => {\r\n    console.log(\"add to cart\");\r\n  };\r\n\r\n  const handleIncrease = () => {\r\n    if (quantity < product.countInStock) {\r\n      setQuantity((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handleDecrease = () => {\r\n    if (quantity > 1) {\r\n      setQuantity((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleRate = (e) => {\r\n    setRate(e);\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-info\">\r\n      <Typography.Title className=\"product-info__name\" level={1}>\r\n        {product.name}\r\n      </Typography.Title>\r\n\r\n      <div className=\"rating\">\r\n        <Rate className=\"rating-item\" disabled defaultValue={product.rating} />\r\n        <div className=\"rating-item ant-rate-text\">{product.numOfReviews} Reviews</div>\r\n      </div>\r\n\r\n      <div className=\"product-info__description\">{product.description}</div>\r\n      <Divider />\r\n      <Descriptions row={3}>\r\n        <Descriptions.Item label=\"In Stock\"> {product.countInStock}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Brand\">{product.brand}</Descriptions.Item>\r\n      </Descriptions>\r\n      <Typography.Title className=\"product-info__price\" level={1}>\r\n        ${product.price}\r\n      </Typography.Title>\r\n\r\n      <div className=\"product-quantity__text\">Quantity</div>\r\n      <div className=\"product-btn-container\">\r\n        <div className=\"product-btn\">\r\n          <Button\r\n            className=\"product-quantity__btn\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            icon={<MinusOutlined />}\r\n            onClick={handleDecrease}\r\n          />\r\n          <Input\r\n            className=\"product-quantity__input\"\r\n            style={{ width: \"60px\" }}\r\n            bordered={false}\r\n            type=\"number\"\r\n            onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\r\n            value={quantity > product.countInStock ? product.countInStock : quantity}\r\n          />\r\n          <Button\r\n            className=\"product-quantity__btn\"\r\n            type=\"text\"\r\n            size=\"large\"\r\n            onClick={handleIncrease}\r\n            icon={<PlusOutlined />}\r\n          />\r\n        </div>\r\n        <Button className=\"product-add__btn\" size=\"large\" type=\"primary\" onClick={addToCarthandler}>\r\n          <img src={cartLogo} />\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n      <div className=\"product-rate\">\r\n        <div className=\"product-rate__text\">Rate</div>\r\n        <Rate onChange={handleRate} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInfo;\r\n","C:\\Users\\hue\\Documents\\mock2\\src\\components\\RelatedProducts\\RelatedProducts.jsx",[],"C:\\Users\\hue\\Documents\\mock2\\src\\api\\axiosClient.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\CustomButton\\CustomButton.jsx",[],"C:\\Users\\hue\\Documents\\mock2\\src\\api\\authApi.js",[],"C:\\Users\\hue\\Documents\\mock2\\src\\components\\Navbar\\CustomButton.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":44,"nodeType":"99","messageId":"100","endLine":1,"endColumn":48},{"ruleId":"97","severity":1,"message":"101","line":11,"column":9,"nodeType":"99","messageId":"100","endLine":11,"endColumn":15},{"ruleId":"97","severity":1,"message":"102","line":11,"column":17,"nodeType":"99","messageId":"100","endLine":11,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":15,"column":11,"nodeType":"99","messageId":"100","endLine":15,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"105","line":35,"column":36,"nodeType":"99","messageId":"100","endLine":35,"endColumn":43},{"ruleId":"106","severity":1,"message":"107","line":118,"column":17,"nodeType":"108","endLine":121,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":161,"column":17,"nodeType":"108","endLine":164,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":62,"column":17,"nodeType":"108","endLine":65,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":13,"column":26,"nodeType":"111","messageId":"112","endLine":13,"endColumn":28},{"ruleId":"97","severity":1,"message":"113","line":1,"column":31,"nodeType":"99","messageId":"100","endLine":1,"endColumn":37},{"ruleId":"97","severity":1,"message":"114","line":1,"column":45,"nodeType":"99","messageId":"100","endLine":1,"endColumn":50},{"ruleId":"97","severity":1,"message":"115","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":79,"column":11,"nodeType":"108","endLine":79,"endColumn":33},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'id' is assigned a value but never used.","'PersonIcon' is defined but never used.","'confirm' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Avatar' is defined but never used.","'Input' is defined but never used.","'rate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]